import { GetServerSideProps, GetServerSidePropsContext } from 'next/types';
import Head from 'next/head';
import { parseCookies } from 'nookies';
import { Layout } from '../components/layout';
import {
  AppContainer,
  ContainerChat,
  AreaUsersConnected,
  LoggedInUser,
  SideBar,
  HeaderChat,
  AreaChat,
  InputToSendMessage,
  SendMessageContainer,
  ButtonSendMessage,
} from './home.styles';
import { IoMdSend } from 'react-icons/io';
import { Roboto } from '@next/font/google';
import { useEffect, useState } from 'react';
import { WebSocketConnection } from '../lib/socketIo/connection';
import { AlertButtonMessage } from '../components/alertButton';

//font
const roboto = Roboto({
  subsets: ['latin'],
  weight: ['100', '300', '400', '500', '700', '900'],
  preload: true,
});

//validations
export const getServerSideProps: GetServerSideProps = async (
  ctx: GetServerSidePropsContext
) => {
  const cookies = parseCookies({ req: ctx.req });
  const UserName = cookies['webchat:UserName'];
  if (!UserName) {
    return {
      redirect: {
        destination: '/login',
        permanent: true,
      },
    };
  }
  return {
    props: {
      cookies: cookies,
    },
  };
};
//page
export default function Home({ cookies }: any) {
  //hooks

  const [message, setMessage] = useState('');

  //connecting with webSocketServer
  useEffect(() => {
    WebSocketConnection();
  }, []);

  const SendMessage = () => {
    console.log(message);
  };

  return (
    <>
      <Head>
        <title>Home</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link
          rel="icon"
          href="/favicon.ico"
        />
      </Head>

      <Layout svg={false}>
        <AppContainer className={roboto.className}>
          <SideBar>
            <AreaUsersConnected>
              <h2>Hello world</h2>
            </AreaUsersConnected>
            <LoggedInUser></LoggedInUser>
          </SideBar>
          <ContainerChat>
            <HeaderChat></HeaderChat>

            <AreaChat></AreaChat>
            <SendMessageContainer>
              <InputToSendMessage
                type="text"
                placeholder="Digite sua mensagem"
                className={roboto.className}
                onChange={(e) => setMessage(e.target.value)}
              />
              <ButtonSendMessage
                type="button"
                onClick={SendMessage}
              >
                <IoMdSend />
              </ButtonSendMessage>
            </SendMessageContainer>
          </ContainerChat>
        </AppContainer>
      </Layout>
    </>
  );
}
